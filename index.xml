<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Muhammad Attiyah - Home</title>
    <link>http://muattiyah.com/</link>
    <description>Recent content on Muhammad Attiyah - Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://muattiyah.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ADTs (Algebraic Data Types) in Haskell</title>
      <link>http://muattiyah.com/posts/haskell-adts/</link>
      <pubDate>Wed, 30 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://muattiyah.com/posts/haskell-adts/</guid>
      <description>Algebraic Data Types are a way for us to define types like the ones that come with Haskell e.g. Bool and Int.
Single Constructor Without Arguments The most simple data type we can construct in Haskell is a type with a single constructor,
data Frame = MkFrame x = MkFrame Examining the type in ghci
:&amp;gt; :type MkFrame MkFrame :: Frame :&amp;gt; :type x x :: Frame  In this example, we use the data keyword to signify a Data Type, Frame is the name of that type and we refer to it as a Type Constructor.</description>
    </item>
    
    <item>
      <title>Mathematical Induction</title>
      <link>http://muattiyah.com/posts/mathematical-induction/</link>
      <pubDate>Mon, 12 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://muattiyah.com/posts/mathematical-induction/</guid>
      <description>Suppose you want to sum up the first 10 natural numbers 1, 2, 3, ...
The most obvious way to do it would be to add the numbers consecutively like so: 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 = 55
No big deal, but now you want to sum the first 1000 natural numbers i.e. 1, 2, 3, .</description>
    </item>
    
  </channel>
</rss>